document.addEventListener("DOMContentLoaded",initTrig,!1);function initTrig(){let t=new IntersectionObserver(a=>{a.forEach(function(t){let e=t.isIntersecting;e?t.target.classList.add("trig"):t.target.classList.remove("trig");var a=0,n=-100,g=100,s=t.boundingClientRect.top;t.target.dataset.trigOffset&&(a=parseInt(t.target.dataset.trigOffset)),t.target.dataset.trigMin&&(n=parseInt(t.target.dataset.trigMin)),t.target.dataset.trigMax&&(g=parseInt(t.target.dataset.trigMax));var d=(0-(s-(i/2+a)))/i*100;d>=n&&d<=g?r[t.target.index]=d:d<=n?r[t.target.index]=n:d>=g&&(r[t.target.index]=g)}),e.forEach(function(t,e){var i=t.style;i.setProperty("--trig",r[e]+"%"),i.setProperty("--trig-reverse",-r[e]+"%"),i.setProperty("--trig-px",r[e]+"px"),i.setProperty("--trig-px-reverse",-r[e]+"px"),i.setProperty("--trig-deg",r[e]/100*360+"deg"),i.setProperty("--trig-deg-reverse",-r[e]/100*360+"deg")}),t.disconnect()});var e=document.querySelectorAll(".enable-trig,[data-trig]"),r=[],i=0;function a(){i=innerHeight,n()}function n(){e&&e.forEach(function(e,r){e.index=r,t.observe(e)})}document.addEventListener("scroll",n,!1),document.addEventListener("resize",a,!1),a()}