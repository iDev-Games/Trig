class Trig{trigs=[];thePos=[];height=0;observer=new IntersectionObserver(function(t){trig.trigEntries(t),trig.updatePos(trig.trigs),trig.observer.disconnect()});trigInit(){trig.trigs=document.querySelectorAll(".enable-trig,[data-trig]"),trig.height=innerHeight,trig.trigScroll()}trigScroll(){trig.trigs&&trig.trigs.forEach(function(t,r){t.index=r,trig.observer.observe(t)})}trigEntries(t){t.forEach(function(t){trig.trigIntersecting(t),trig.trigPos(t)})}trigIntersecting(t){t.isIntersecting?t.target.classList.add("trig"):t.target.classList.remove("trig")}trigPos(t){var r=0,i=0,e=-100,g=100,s=t.boundingClientRect.top,o=t.boundingClientRect.height,n=t.target,a=n.dataset;a.trigOffset&&(r=parseInt(a.trigOffset)),a.trigMin&&(e=parseInt(a.trigMin)),a.trigMax&&(g=parseInt(a.trigMax)),a.trigHeight&&(i=parseInt(a.trigHeight)),trig.height>o&&(o=trig.height);var d=(0-(s-(trig.height/2+r)))/(o+i)*100;trig.trigSetPos(d,e,g,n)}trigSetPos(t,r,i,e){t>=r&&t<=i?trig.thePos[e.index]=t:t<=r?trig.thePos[e.index]=r:t>=i&&(trig.thePos[e.index]=i)}updatePos(){trig.trigs.forEach(function(t,r){if("true"==t.dataset.trigGlobal&&t.id)var i=document.documentElement.style,e="-"+t.id;else var i=t.style,e="";i.setProperty("--trig"+e,trig.thePos[r]+"%"),i.setProperty("--trig-reverse"+e,-trig.thePos[r]+"%"),i.setProperty("--trig-px"+e,trig.thePos[r]+"px"),i.setProperty("--trig-px-reverse"+e,-trig.thePos[r]+"px"),i.setProperty("--trig-deg"+e,trig.thePos[r]/100*360+"deg"),i.setProperty("--trig-deg-reverse"+e,-trig.thePos[r]/100*360+"deg")})}}const trig=new Trig;document.addEventListener("scroll",trig.trigScroll,!1),document.addEventListener("resize",trig.trigInit,!1),document.addEventListener("DOMContentLoaded",trig.trigInit,!1);