const trig={trigs:[],thePos:[],documentHeight:0,trigIntersecting:function(t){t.isIntersecting?t.target.classList.add("trig"):t.target.classList.remove("trig")},trigEntries:function(t){t.forEach(function(t){trigObject.trigIntersecting(t),trigObject.trigPos(t)})},trigSetPos:function(t,e,r,i,g){var s=(0-(t-(trigObject.documentHeight/2+g)))/trigObject.documentHeight*100;s>=e&&s<=r?trigObject.thePos[i.target.index]=s:s<=e?trigObject.thePos[i.target.index]=e:s>=r&&(trigObject.thePos[i.target.index]=r)},trigPos:function(t){var e=0,r=-100,i=100,g=t.boundingClientRect.top;t.target.dataset.trigOffset&&(e=parseInt(t.target.dataset.trigOffset)),t.target.dataset.trigMin&&(r=parseInt(t.target.dataset.trigMin)),t.target.dataset.trigMax&&(i=parseInt(t.target.dataset.trigMax)),trigObject.trigSetPos(g,r,i,t,e)},updatePos:function(){trigObject.trigs.forEach(function(t,e){var r=t.style;r.setProperty("--trig",trigObject.thePos[e]+"%"),r.setProperty("--trig-reverse",-trigObject.thePos[e]+"%"),r.setProperty("--trig-px",trigObject.thePos[e]+"px"),r.setProperty("--trig-px-reverse",-trigObject.thePos[e]+"px"),r.setProperty("--trig-deg",trigObject.thePos[e]/100*360+"deg"),r.setProperty("--trig-deg-reverse",-trigObject.thePos[e]/100*360+"deg")})}},observer=new IntersectionObserver(function(t){trigObject.trigEntries(t),trigObject.updatePos(trigObject.trigs),observer.disconnect()}),trigObject=Object.create(trig);function trigInit(){trigObject.trigs=document.querySelectorAll(".enable-trig,[data-trig]"),trigObject.documentHeight=innerHeight,trigScroll()}function trigScroll(){trigObject.trigs&&trigObject.trigs.forEach(function(t,e){t.index=e,observer.observe(t)})}document.addEventListener("scroll",trigScroll,!1),document.addEventListener("resize",trigInit,!1),document.addEventListener("DOMContentLoaded",trigInit,!1);