class Trig{trigs=[];thePos=[];height=0;pos=0;scrollDir=["trig-scroll-down","trig-scroll-up"];observer;constructor(){self=this}trigInit(){self.observer=new IntersectionObserver(self.trigObserver),self.trigs=document.querySelectorAll("body,.enable-trig,[data-trig]"),self.height=innerHeight,self.trigScroll()}trigScroll(){self.trigs&&self.trigs.forEach(function(t,r){t.index=r,self.observer.observe(t)})}trigEntries(t){t.forEach(function(t){self.trigIntersecting(t),0==t.target.index&&self.trigDirection(t),self.trigPos(t),self.updatePos(t.target)})}trigDirection(t){var r=t.boundingClientRect.y;self.scrollPos&&(self.scrollPos<r-1?self.scrollDir=["trig-scroll-down","trig-scroll-up"]:self.scrollPos>r+1&&(self.scrollDir=["trig-scroll-up","trig-scroll-down"])),self.scrollPos=r}trigObserver(t){self.trigEntries(t),self.observer.disconnect()}trigIntersecting(t){document.body!=t.target&&(t.isIntersecting?t.target.classList.add("trig"):t.target.classList.remove("trig"))}trigPos(t){var r={offset:0,height:0,min:-100,max:100};Object.keys(r).forEach(function(e){r[e]=self.trigAttributes(t,r,e)});var e=t.boundingClientRect.top,i=t.boundingClientRect.height;if(self.height>i&&(i=self.height),document.body==t.target)var s=0-e,o=s/(i-self.height)*100;else var s=0-(e-(self.height/2+r.offset)),o=s/(i+r.height)*100;self.trigSetPos(o,r.min,r.max,t.target)}trigAttributes(t,r,e){var i=t.target.getAttribute("data-trig-"+e);return i?null!=i.match(/^[0-9]+$/)?parseInt(i):i:r[e]}trigSetPos(t,r,e,i){t>=r&&t<=e?self.thePos[i.index]=t:t<=r?self.thePos[i.index]=r:t>=e&&(self.thePos[i.index]=e)}trigSetBody(t){var r=t.classList;r.contains(self.scrollDir[0])&&r.replace(self.scrollDir[0],self.scrollDir[1]),r.contains(self.scrollDir[0])||r.contains(self.scrollDir[1])||r.add("trig-scroll-up");var e=[0,25,50,75,100];for(let i=0;i<e.length;i++)self.trigSplit(e[i],t.index,r)}trigSplit(t,r,e){var i=t;0==t||100==t?self.trigSplitEquals(i,t,e,r):self.trigSplitMoreThan(i,t,e,r)}trigSplitEquals(t,r,e,i){0==r?t="top":100==r&&(t="bottom"),self.thePos[i]==r?e.add("trig-scroll-"+t):e.remove("trig-scroll-"+t)}trigSplitMoreThan(t,r,e,i){self.thePos[i]>=r?e.add("trig-scroll-"+t):self.thePos[i]<r&&e.remove("trig-scroll-"+t)}updatePos(t){if("true"==t.dataset.trigGlobal&&t.id)var r=document.documentElement.style,e="-"+t.id;else var r=t.style,e="";document.body==t?self.trigSetBody(t):(r.setProperty("--trig"+e,self.thePos[t.index]+"%"),r.setProperty("--trig-reverse"+e,-self.thePos[t.index]+"%"),r.setProperty("--trig-px"+e,self.thePos[t.index]+"px"),r.setProperty("--trig-px-reverse"+e,-self.thePos[t.index]+"px"),r.setProperty("--trig-deg"+e,self.thePos[t.index]/100*360+"deg"),r.setProperty("--trig-deg-reverse"+e,-self.thePos[t.index]/100*360+"deg"))}}const trig=new Trig;document.addEventListener("scroll",trig.trigScroll,!1),document.addEventListener("resize",trig.trigInit,!1),document.addEventListener("DOMContentLoaded",trig.trigInit,!1);