class Trig{trigs=[];thePos=[];height=0;observer=new IntersectionObserver(function(t){trig.trigEntries(t),trig.observer.disconnect()});trigInit(){trig.trigs=document.querySelectorAll(".enable-trig,[data-trig]"),trig.height=innerHeight,trig.trigScroll()}trigScroll(){trig.trigs&&trig.trigs.forEach(function(t,r){t.index=r,trig.observer.observe(t)})}trigEntries(t){t.forEach(function(t){trig.trigIntersecting(t),trig.trigPos(t),trig.updatePos(t.target)})}trigIntersecting(t){t.isIntersecting?t.target.classList.add("trig"):t.target.classList.remove("trig")}trigPos(t){var r=0,e=0,i=-100,g=100,s=t.boundingClientRect.top,n=t.boundingClientRect.height,o=t.target.dataset;o.trigOffset&&(r=parseInt(o.trigOffset)),o.trigMin&&(i=parseInt(o.trigMin)),o.trigMax&&(g=parseInt(o.trigMax)),o.trigHeight&&(e=parseInt(o.trigHeight)),trig.height>n&&(n=trig.height);var d=(0-(s-(trig.height/2+r)))/(n+e)*100;trig.trigSetPos(d,i,g,t.target)}trigSetPos(t,r,e,i){t>=r&&t<=e?trig.thePos[i.index]=t:t<=r?trig.thePos[i.index]=r:t>=e&&(trig.thePos[i.index]=e)}updatePos(t){if("true"==t.dataset.trigGlobal&&t.id)var r=document.documentElement.style,e="-"+t.id;else var r=t.style,e="";r.setProperty("--trig"+e,trig.thePos[t.index]+"%"),r.setProperty("--trig-reverse"+e,-trig.thePos[t.index]+"%"),r.setProperty("--trig-px"+e,trig.thePos[t.index]+"px"),r.setProperty("--trig-px-reverse"+e,-trig.thePos[t.index]+"px"),r.setProperty("--trig-deg"+e,trig.thePos[t.index]/100*360+"deg"),r.setProperty("--trig-deg-reverse"+e,-trig.thePos[t.index]/100*360+"deg")}}const trig=new Trig;document.addEventListener("scroll",trig.trigScroll,!1),document.addEventListener("resize",trig.trigInit,!1),document.addEventListener("DOMContentLoaded",trig.trigInit,!1);